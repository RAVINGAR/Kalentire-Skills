plugins {
    id 'java-library'
}

ext {
    hcRepoUsername = System.getenv("HC_REPO_USERNAME") ?: hcRepoUsername
    hcRepoPassword = System.getenv("HC_REPO_PASSWORD") ?: hcRepoPassword
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'

    group 'com.herocraftonline.heroes.characters.skill'
    version '1.9.21'
}
repositories {
    //mavenLocal()
    mavenCentral()

    maven {
        name 'Bungee Chat Repo'
        url 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name 'worldguard'
        url 'https://maven.enginehub.org/repo/'
    }
    maven {
        name 'herocraft-repo'
        url 'https://nexus.hc.to/content/repositories/herocraft/'
        credentials {
            username hcRepoUsername
            password hcRepoPassword
        }
    }
    maven {
        name 'mythic-repo'
        url 'https://mvn.lumine.io/repository/maven-public/'
    }

    maven {
        name 'dmullloy2-repo'
        url 'https://repo.dmulloy2.net/repository/public/'
    }

    maven {
        name 'md-5'
        url 'https://repo.md-5.net/content/groups/public/'
    }
}

ext.getGitHash = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch(ignored) {
        def out = System.getenv("CI_COMMIT_SHORT_SHA")
        if(out == null) {
            out = ""
        }
        return out
    }
}

dependencies {
    compileOnly "com.herocraftonline.heroes:Heroes:1.9.21-SNAPSHOT"
    compileOnly "org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT"
    compileOnly "net.milkbowl.vault:VaultAPI:1.7"
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.3"
    compileOnly "com.comphenix.protocol:ProtocolLib:4.7.0"
    compileOnly "LibsDisguises:LibsDisguises:10.0.26"
    compileOnly "com.griefcraft.lwc:LWC:4.4.0"
    compileOnly "de.slikey:EffectLib:6.1"
    compileOnly "com.herocraftonline:townships:1.1.0-SNAPSHOT"
    compileOnly "fr.neatmonster:nocheatplus:3.16.1-SNAPSHOT"
    compileOnly 'io.lumine:Mythic-Dist:5.0.3-SNAPSHOT'
}

configurations {
    packClasspath
    packClasspath.extendsFrom(compileOnly)
    packClasspath.setCanBeResolved(true)
    packClasspath.transitive(true)
}

tasks.register("public1", CompilePackTask) {
    pack = "public1"
}
tasks.register("pack1", CompilePackTask) {
    pack = "pack1"
}
tasks.register("pack2", CompilePackTask) {
    pack = "pack2"
}
tasks.register("pack3", CompilePackTask) {
    pack = "pack3"
}
tasks.register("pack4", CompilePackTask) {
    pack = "pack4"
}
tasks.register("pack5", CompilePackTask) {
    pack = "pack5"
}
tasks.register("pack6", CompilePackTask) {
    pack = "pack6"
}
tasks.register("pack7", CompilePackTask) {
    pack = "pack7"
}
tasks.register("pack8", CompilePackTask) {
    pack = "pack8"
}
tasks.register("reborn", CompilePackTask) {
    pack = "reborn"
}
tasks.register("remastered", CompilePackTask) {
    pack = "remastered"
}

tasks.register("compile-remaster", CompileJar) {
    pack = "remastered"
}

abstract class CompileJar extends JavaCompile {
    @Input
    String pack = ""

    CompileJar() {
        source = project.fileTree(dir: "src/main/java/com/herocraftonline/heroes/characters/skill/" + pack, include: 'Skill*.java')
        options.encoding("UTF-8")
        sourceCompatibility = '17'
        targetCompatibility = '17'
        classpath = project.configurations.packClasspath.getAsFileTree()
    }
}

abstract class CompilePackTask extends DefaultTask {

    @Input
    String pack = "public1"

    @TaskAction
    def compile() {
        def bin = "bin"
        def dist = "build"
        def src = "com/herocraftonline/heroes/characters/skill/" + pack

        ant.mkdir(dir: bin)
        ant.mkdir(dir: dist)

        def version = project.version + "-" + project.getGitHash()

        ant.echo(message: "Heroes Skills Version " + version + " \nBuilding Pack - "  + pack)

        ant.javac(srcdir: "src/main/java/" + src
                , excludes: "**/unusedskills/**"
                , destdir: bin
                , includeantruntime: "false"
                , encoding: "utf-8"
                , fork: "yes"
                , classpath: project.configurations.packClasspath.asPath
                , source: '17'
                , target: '17')

        def scanner = ant.fileScanner {
            fileset(dir: bin + "/" + src) {
                include(name: "Skill*.class")
                exclude(name: "Skill*\$*.class")
            }
        }
        //https://groovy-lang.org/scripting-ant.html

        ant.mkdir(dir: dist + "/" + pack)
        for(f in scanner) {
            def classname = f.name.replaceAll(".class", "")
            def infopath = bin + "/skill.info"
            ant.echo(message: src + "/" + classname)
            ant.echo(file: infopath, message: "main-class: com.herocraftonline.heroes.characters.skill." + pack + "." + classname + ",version: " + version)
            ant.jar(jarfile: dist + "/" + pack + "/" + classname + ".jar", basedir: bin, includes: src + "/" + classname + "*.class, skill.info") {
                manifest {
                    attribute(name: "Class-Path", value: "../../Heroes.jar")
                }
            }

            ant.delete(file: infopath)
        }

        ant.zip(destfile: dist + "/heroes-" + pack + ".zip") {
            fileset(dir: dist + "/" + pack) {
                include(name: "*.jar")
            }
        }

        ant.delete(dir: bin + "/" + src)
        ant.delete(dir: dist + "/" + pack)
    }
}